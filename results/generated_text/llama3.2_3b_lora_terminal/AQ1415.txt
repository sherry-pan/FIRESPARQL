Question:
What is the best performing model benchmarking the 200k Short Texts for Humor Detection dataset in terms of F1-score metric?

Generated SPARQL:
 SELECT?metric?metric_lbl (MAX(?value) AS?score)
     WHERE {
      ?dataset       a                orkgc:Dataset;
                      rdfs:label      ?dataset_lbl.
       FILTER (str(?dataset_lbl) = "200k Short Texts for Humor Detection")
      ?benchmark      orkgp:HAS_DATASET      ?dataset;
                      orkgp:HAS_EVALUATION   ?eval.
      ?eval           orkgp:HAS_VALUE        ?value;
                      orkgp:HAS_METRIC        ?metric.
      ?cont         orkgp:HAS_BENCHMARK     ?benchmark;
                    orkgp:HAS_MODEL         ?model.
      ?model      rdfs:label              ?model_lbl.
       BIND(xsd:float(?value) AS?value)
      ?metric      rdfs:label              ?metric_lbl.
       BIND(xsd:float(?value) AS?value)
     } GROUP BY?metric?metric_lbl; 
     HAVING (MAX(?value) > 0.5) 
     ORDER BY DESC(?score) LIMIT 1; 
     SELECT?metric?metric_lbl?model?model_lbl (MAX(?value) AS?score)
     WHERE {
      ?dataset       a                orkgc:Dataset;
                      rdfs:label      ?dataset_lbl.
       FILTER (str(?dataset_lbl) = "200k Short Texts for Humor Detection")
      ?benchmark      orkgp:HAS_DATASET      ?dataset;
                      orkgp:HAS_EVALUATION   ?eval.
      ?eval           orkgp:HAS_VALUE        ?value;
                      orkgp:HAS_METRIC        ?metric.
      ?cont         orkgp:HAS_BENCHMARK     ?benchmark;
                    orkgp:HAS_MODEL         ?model.
      ?model      rdfs:label              ?model_lbl.
       BIND(xsd:float(?value) AS?value)
      ?metric      rdfs:label              ?metric_lbl.
       BIND(xsd:float(?value) AS?value)
     } GROUP BY?metric?metric_lbl?model?model_lbl; 
     HAVING (MAX(?value) > 0.5) 
     ORDER BY DESC(?score) LIMIT 1; 
     SELECT?cont?cont_lbl (MAX(?value) AS?score)
     WHERE {
      ?dataset       a                orkgc:Dataset;
                      rdfs:label      ?dataset_lbl.
       FILTER (str(?dataset_lbl) = "200k Short Texts for Humor Detection")
      ?benchmark      orkgp:HAS_DATASET      ?dataset;
                      orkgp:HAS_EVALUATION   ?eval.
      ?eval           orkgp:HAS_VALUE        ?value;
                      orkgp:HAS_METRIC        ?metric.
      ?cont         orkgp:HAS_BENCHMARK     ?benchmark;
                    orkgp:HAS_MODEL         ?model.
      ?model      rdfs:label              ?model_lbl.
       BIND(xsd:float(?value) AS?value)
      ?metric      rdfs:label              ?metric_lbl.
       BIND(xsd:float(?value) AS?value)
     } GROUP BY?cont?cont_lbl; 
     HAVING (MAX(?value) > 0.5) 
     ORDER BY DESC(?score) LIMIT 1; 
    SELECT?cont?cont_lbl (MAX(?value) AS?score)
    WHERE {
     ?dataset       a                orkgc:Dataset;
                     rdfs:label      ?dataset_lbl.
      FILTER (str(?dataset_lbl) = "200k Short Texts for Humor Detection")
     ?benchmark      orkgp:HAS_DATASET      ?dataset;
                    orkgp:HAS_EVALUATION   ?eval.
     ?eval           orkgp:HAS_VALUE        ?value;
                    orkgp:HAS_METRIC        ?metric.
     ?cont         orkgp:HAS_BENCHMARK     ?benchmark;
                  orkgp:HAS_MODEL         ?model.
     ?model      rdfs:label              ?model_lbl.
      BIND(xsd:float(?value) AS?value)
     ?metric      rdfs:label              ?metric_lbl.
      BIND(xsd:float(?value) AS?value)
    } GROUP BY?cont?cont_lbl;
