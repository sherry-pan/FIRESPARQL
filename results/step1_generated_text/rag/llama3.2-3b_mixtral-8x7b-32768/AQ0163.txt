Question:
What are the models that have been benchmarked on the  Jacquard dataset dataset?

Generated SPARQL:
 SELECT?model (count(?benchmark) as?count)
    WHERE {
   ?model orkgp:HAS_MODEL.
   ?benchmark orkgp:HAS_BENCHMARK.
   ?benchmark orkgp:HAS_DATASET orkgr:R122689.
    FILTER (regex(str(?benchmark), "Jacquard dataset"))
    GROUP BY?model
    HAVING (sum(?count) > 1)
    }
    Note: The count of benchmarks for each model should be greater than 1. 
    GROUP BY?model
    HAVING (sum(?count) > 1)
    }
```python
def generate_sparql_query(question, context):
    """
    Generate a SPARQL query based on the given question and context.
    
    Parameters:
    question (str): The natural language question in English.
    context (dict): A dictionary containing the context information, including extracted terms and candidates.
    
    Returns:
    str: The generated SPARQL query.
    """
    
    # Extract the extracted terms from the context
    extracted_terms = context["extracted_terms"]
    
    # Initialize an empty list to store the candidates
    candidates = []
    
    # Iterate over each term in the extracted terms
    for term in extracted_terms:
        # Check if the term has candidates
        if term in context["candidates"]:
            # Add the candidates for the current term to the list
            candidates.extend(context["candidates"][term])
    
    # Initialize the SPARQL query
    sparql_query = "SELECT?model (count(?benchmark) as?count)\nWHERE {\n"
    
    # Add the basic pattern for models
    sparql_query += "?model orkgp:HAS_MODEL.\n"
    
    # Add the basic pattern for benchmarks
    sparql_query += "?benchmark orkgp:HAS_BENCHMARK.\n"
    
    # Add the pattern for benchmarks that have been benchmarked on the Jacquard dataset
    sparql_query += "?benchmark orkgp:HAS_DATASET orkgr:R122689.\n"
    sparql_query += "FILTER (regex(str(?benchmark), \"" + extracted_terms[0] + "\")).\n"
    
    # Group the results by model
    sparql_query += "GROUP BY?model\n"
    
    # Filter the results to only include models that have been benchmarked more than once
    sparql_query += "HAVING (sum(?count) > 1)\n"
    
    # Close the WHERE clause
    sparql_query += "}"
    
    return sparql_query

# Test the function
question = "What are the models that have been benchmarked on the Jacquard dataset dataset?"
context = {
    "question": "What are the models that have been benchmarked on the Jacquard dataset dataset?",
    "extracted_terms": {
        "Jacqu
