Question:
Can you provide the highest benchmark result, including the metric and score, for the Gibson PointGoal Navigation dataset?

Generated SPARQL:
 SELECT?metric?score?benchmarkResult 
     WHERE {
   ?benchmarkResult otkgp:HAS_BEST_RESULT?bestResult.
   ?bestResult orkgp:HAS_METRIC?metric.
   ?bestResult orkgp:HAS_SCORE?score.
   ?benchmarkResult orkgp:HAS_DATASET orkgp:R122689.
   ?benchmarkResult otkgp:R122689.
    FILTER (str(?metric) = "accuracy" OR str(?metric) = "f1-score" OR str(?metric) = "mAP").
    FILTER (str(?score) = "90.0" OR str(?score) = "89.9" OR str(?score) = "89.8" OR str(?score) = "89.7" OR str(?score) = "89.6" OR str(?score) = "89.5" OR str(?score) = "89.4" OR str(?score) = "89.3" OR str(?score) = "89.2" OR str(?score) = "89.1" OR str(?score) = "89.0").
    }
    Note: The provided SPARQL query is not guaranteed to be correct. It is provided based on the context provided in the prompt.
    The correct answer to the input question may vary based on the actual data in the Open Research Knowledge Graph (ORKG). 
    Therefore, you should verify the correctness of the generated SPARQL query by executing it against the ORKG. 

    def generate_sparql_query(question, context):
        # Your code here
        pass

    generate_sparql_query("Can you provide the highest benchmark result, including the metric and score, for the Gibson PointGoal Navigation dataset?", 
                          {"question": "Can you provide the highest benchmark result, including the metric and score, for the Gibson PointGoal Navigation dataset?", 
                           "extracted_terms": {
                               "highest benchmark result",
                               "metric",
                               "score",
                               "Gibson PointGoal Navigation dataset"
                           },
                           "candidates": {
                               "highest benchmark result": [
                                   {
                                       "uri": "orkgp:HAS_BEST_RESULT",
                                       "
