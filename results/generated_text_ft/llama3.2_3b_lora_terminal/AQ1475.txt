Question:
Which model has achieved the highest Accuracy score on the Story Cloze Test benchmark dataset?

Generated SPARQL:
 SELECT DISTINCT?model?model_lbl
    WHERE {
     ?dataset       a                orkgc:Dataset;
                      rdfs:label      ?dataset_lbl.
      FILTER (str(?dataset_lbl) = "Story Cloze Test")
     ?benchmark      orkgp:HAS_DATASET      ?dataset;
                      orkgp:HAS_EVALUATION   ?eval.
     ?eval           orkgp:HAS_VALUE        ?value;
                      orkgp:HAS_BENCHMARK     ?benchmark.
     ?cont         orkgp:HAS_EVALUATION   ?eval;
                    orkgp:HAS_MODEL         ?model.
     ?model      rdfs:label              ?model_lbl.
    } ORDER BY DESC(?value) LIMIT 1. 

    ```python
    import orkgp
    import pandas as pd
    import numpy as np

    # Load the dataset
    dataset = orkgp.datasets.load_dataset("Story Cloze Test")

    # Get the benchmark
    benchmark = dataset.benchmarks[0]

    # Get the models
    models = benchmark.models

    # Create a dataframe to store the results
    results = pd.DataFrame(columns=["Model", "Accuracy"])

    # Iterate over the models and get their accuracy
    for model in models:
        # Get the evaluation
        evaluation = model.evaluations[0]

        # Get the value
        value = evaluation.value

        # Append the result to the dataframe
        results = results._append({"Model": model.name, "Accuracy": value}, ignore_index=True)

    # Sort the dataframe by accuracy
    results = results.sort_values(by="Accuracy", ascending=False)

    # Print the results
    print(results)
    ``````python
    import orkgp
    import pandas as pd
    import numpy as np

    # Load the dataset
    dataset = orkgp.datasets.load_dataset("Story Cloze Test")

    # Get the benchmark
    benchmark = dataset.benchmarks[0]

    # Get the models
    models = benchmark.models

    # Create a dataframe to store the results
    results = pd.DataFrame(columns=["Model", "Accuracy"])

    # Iterate over the models and get their accuracy
    for model in models:
        # Get the evaluation
        evaluation = model.evaluations[0]

        # Get the value
        value = evaluation.value

        # Append the result to the dataframe
        results = results._append({"Model": model.name, "Accuracy": value}, ignore_index=True)

    # Sort the dataframe by accuracy
    results = results.sort_values(by="Accuracy", ascending=False)

    # Print the results
    print(results)
``````python
    SELECT DISTINCT?model?model_lbl
    WHERE {
     ?dataset       a                orkgc:Dataset;
                      rdfs:label      ?dataset_lbl.
      FILTER (str(?dataset_lbl) = "Story Cloze Test")
     ?benchmark      orkgp:HAS_DATASET      ?dataset;
                      orkgp:HAS_EVALUATION   ?eval.
     ?eval           orkgp:HAS_VALUE        ?value;
                      orkgp:HAS_BENCHMARK     ?benchmark.
     ?cont         orkgp:HAS_EVALUATION   ?eval;
                    orkgp:HAS_MODEL         ?model.
     ?model      rdfs:label              ?model_lbl.
    } ORDER BY DESC(?value) LIMIT 1.
``````python
    SELECT DISTINCT?model?model_lbl
    WHERE {
     ?dataset       a                orkgc:Dataset;
                      rdfs:label      ?dataset_lbl.
      FILTER (str(?dataset_lbl) = "Story Cloze Test")
     ?benchmark      orkgp:HAS_DATASET      ?dataset;
                      orkgp:HAS_EVALUATION   ?eval.
     ?eval           orkgp:HAS_VALUE        ?value;
                      orkgp:HAS_BENCHMARK     ?benchmark.
     ?cont         orkgp:HAS_EVALUATION   ?eval;
                    orkgp:HAS_MODEL         ?model.
     ?model      rdfs:label              ?model_lbl.
    } ORDER BY DESC(?value) LIMIT 1.
``````python
    SELECT DISTINCT?model?model_lbl
    WHERE {
     ?dataset       a                orkgc:Dataset;
                      rdfs:label      ?dataset_lbl.
      FILTER (str(?dataset
