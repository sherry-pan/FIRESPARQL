Question:
Can you provide the highest benchmark result, including the metric and score, for the Ball in cup, catch (DMControl100k) dataset?

Generated SPARQL:
 PREFIX orkg: <http://www.openresearch.org/orkg/>
     PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
     PREFIX owl: <http://www.w3.org/2002/07/owl#>
     PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
     PREFIX dbp: <http://dbpedia.org/property/>
     PREFIX dbr: <http://dbpedia.org/resource/>
     PREFIX wikibase: <http://wikibase.org/bash#>
     SELECT?metric?score?dataset
     WHERE {
     ?dataset a orkg:Dataset.
     ?dataset orkg:name "Ball in cup, catch (DMControl100k)".
     ?benchmark a orkg:Benchmark.
     ?benchmark orkg:dataset?dataset.
     ?benchmark orkg:metric?metric.
     ?benchmark orkg:score?score.
     ?benchmark rdfs:label?label.
      FILTER (str(?label) = "highest benchmark result".
             str(?label) = "highest".
             str(?label) = "benchmark result".
             str(?label) = "result".
             str(?label) = "score".
             str(?label) = "metric".
             str(?label) = "dataset".
             str(?label) = "Ball in cup, catch (DMControl100k)")
      }
    } 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {} 
    END {}
