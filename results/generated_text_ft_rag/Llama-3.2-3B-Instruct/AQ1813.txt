Question:
What is the best performing model benchmarking the iNaturalist 2018 dataset in terms of Top-1 Accuracy metric?

Generated SPARQL:
 SELECT?model?model_lbl (MAX(?eval_acc) AS?score)
     WHERE {
      ?dataset       a            orkgc:Dataset;
                      rdfs:label   ?dataset_lbl.
         FILTER (str(?dataset_lbl) = "iNaturalist 2018")
       }
     UNION {
      ?benchmark      orkgp:HAS_DATASET      ?dataset.
        ?dataset       rdfs:label           ?dataset_lbl.
        ?benchmark      orkgp:HAS_EVALUATION ?eval.
        ?eval           orkgp:P31            ?eval_lbl.
         FILTER (str(?eval_lbl) = "Evaluation Top 1 Accuracy")
       }
     UNION {
      ?benchmark      orkgp:HAS_DATASET      ?dataset.
        ?dataset       rdfs:label           ?dataset_lbl.
        ?benchmark      orkgp:HAS_MODEL       ?model.
        ?model        rdfs:label             ?model_lbl.
        ?model      orkgp:HAS_EVALUATION   ?eval.
        ?eval       orkgp:P31              ?eval_lbl.
         FILTER (str(?eval_lbl) = "Evaluation Top 1 Accuracy")
       }
     {
       SELECT?model?model_lbl (MAX(?eval_acc) AS?score)
       WHERE {
        ?model      orkgp:HAS_EVALUATION     ?eval.
          ?eval       orkgp:P31              ?eval_lbl.
           FILTER (str(?eval_lbl) = "Evaluation Top 1 Accuracy")
        ?cont         orkgp:P31               ?model.
          ?model      rdfs:label             ?model_lbl.
          ?cont        orkgp:HAS_MODEL        ?model.
        ?model      rdfs:label             ?model_lbl.
        ?cont      orkgp:HAS_DATASET      ?dataset.
          ?dataset      rdfs:label           ?dataset_lbl.
           FILTER (str(?dataset_lbl) = "iNaturalist 2018")
       }
       ORDER BY DESC(?eval_acc)
       LIMIT 5
     }
     UNION {
       SELECT?model?model_lbl (MAX(?eval_acc) AS?score)
       WHERE {
        ?model      orkgp:HAS_EVALUATION     ?eval.
          ?eval       orkgp:P31              ?eval_lbl.
           FILTER (str(?eval_lbl) = "Evaluation Top 1 Accuracy")
        ?cont         orkgp:P31               ?model.
          ?model      rdfs:label             ?model_lbl.
          ?cont        orkgp:HAS_MODEL        ?model.
        ?model      rdfs:label             ?model_lbl.
        ?cont      orkgp:HAS_DATASET      ?dataset.
          ?dataset      orkgp:HAS_BENCHMARK   ?benchmark.
          ?benchmark      rdfs:label           ?benchmark_lbl.
           FILTER (str(?benchmark_lbl) = "Benchmark ImageNet")
       }
       ORDER BY DESC(?eval_acc)
       LIMIT 5
     }
     UNION {
       SELECT?model?model_lbl (MAX(?eval_acc) AS?score)
       WHERE {
        ?model      orkgp:HAS_EVALUATION     ?eval.
          ?eval       orkgp:P31              ?eval_lbl.
           FILTER (str(?eval_lbl) = "Evaluation Top 1 Accuracy")
        ?cont         orkgp:P31               ?model.
          ?model      rdfs:label             ?model_lbl.
          ?cont        orkgp:HAS_MODEL        ?model.
        ?model      rdfs:label             ?model_lbl.
        ?cont      orkgp:HAS_DATASET      ?dataset.
          ?dataset      orkgp:HAS_EVALUATION   ?eval.
          ?eval       orkgp:P31              ?eval_lbl.
           FILTER (str(?eval_lbl) = "Evaluation Top 1 Accuracy")
       }
       ORDER BY DESC(?eval_acc)
       LIMIT 5
     }  
     UNION {
       SELECT?model?model_lbl (MAX(?eval_acc) AS?score)
       WHERE {
        ?model      orkgp:HAS_EVALUATION     ?eval.
          ?eval       orkgp:P31              ?eval_lbl.
           FILTER (str(?eval_lbl) = "Evaluation Top 1 Accuracy")
        ?cont         orkgp:P31               ?model.
          ?model      rdfs:label             ?model_lbl.
          ?cont        orkgp:HAS_MODEL        ?model.
        ?model      rdfs:label             ?model_lbl.
        ?cont      orkgp:HAS_DATASET      ?dataset.
          ?dataset      orkgp:HAS_BENCHMARK   ?benchmark.
          ?benchmark      orkgp:HAS_EVALUATION   ?eval.
          ?eval       orkgp:P31              ?eval_lbl.
           FILTER (str(?eval_lbl) = "Evaluation Top 1 Accuracy")
      
