Question:
What is the highest benchmark result achieved on the Amazon-2 dataset, including the metric and its value?

Generated SPARQL:
 SELECT?metric,?value
     WHERE {
      ?dataset       a                orkgc:Dataset;
                      rdfs:label      ?dataset_lbl.
           FILTER (str(?dataset_lbl) = "Amazon-2")
          ?benchmark      orkgp:HAS_DATASET      ?dataset;
                            orkgp:HAS_EVALUATION   ?eval.
          ?eval           orkgp:HAS_VALUE        ?value.
          ?cont         orkgp:HAS_BENCHMARK     ?benchmark.
          ?benchmark      orkgp:HAS_METRIC        ?metric.
           BIND(xsd:integer(?value) AS?value)
     } 
     ORDER BY DESC(?value) 
     LIMIT 1; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 
     END; 

