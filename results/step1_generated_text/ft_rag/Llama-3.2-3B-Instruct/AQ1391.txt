Question:
What is the best performing model benchmarking the ACE 2004 dataset in terms of RE+ Micro F1 metric?

Generated SPARQL:
 ```sparql
SELECT DISTINCT?model?model_lbl
WHERE {
 ?metric     a       orkgc:Metric;
              rdfs:label ?metric_lbl.
  FILTER (str(?metric_lbl) = "RE+ Micro F1")
 ?benchmark      orkgp:HAS_DATASET      ?dataset.
 ?dataset        orkgp:HAS_EVALUATION   ?eval.
 ?eval           orkgp:HAS_METRIC        ?metric;
                  orkgp:HAS_VALUE         ?value.
  BIND(xsd:float(?value) AS?value)
 ?cont         orkgp:HAS_BENCHMARK     ?benchmark.
 ?cont         rdfs:label               ?cont_lbl.
  BIND(xsd:float(?cont_lbl) AS?cont_lbl)
 ?model      orkgp:HAS_MODEL          ?cont;
               orkgp:P31               ?model.
 ?model      rdfs:label               ?model_lbl.
}
ORDER BY DESC(?value)
LIMIT 5
```     .formatting for the SPARQL query
```sparql
SELECT DISTINCT?model?model_lbl
WHERE {
 ?metric     a       orkgc:Metric;
              rdfs:label ?metric_lbl.
  FILTER (str(?metric_lbl) = "RE+ Micro F1")
 ?benchmark      orkgp:HAS_DATASET      ?dataset.
 ?dataset        orkgp:HAS_EVALUATION   ?eval.
 ?eval           orkgp:HAS_METRIC        ?metric;
                  orkgp:HAS_VALUE         ?value.
  BIND(xsd:float(?value) AS?value)
 ?cont         orkgp:HAS_BENCHMARK     ?benchmark.
 ?cont         rdfs:label               ?cont_lbl.
  BIND(xsd:float(?cont_lbl) AS?cont_lbl)
 ?model      orkgp:HAS_MODEL          ?cont;
               orkgp:P31               ?model.
 ?model      rdfs:label               ?model_lbl.
}
ORDER BY DESC(?value)
LIMIT 5
```     .formatting for the SPARQL query
```sparql
SELECT DISTINCT?model?model_lbl
WHERE {
 ?metric     a       orkgc:Metric;
              rdfs:label ?metric_lbl.
  FILTER (str(?metric_lbl) = "RE+ Micro F1")
 ?benchmark      orkgp:HAS_DATASET      ?dataset.
 ?dataset        orkgp:HAS_EVALUATION   ?eval.
 ?eval           orkgp:HAS_METRIC        ?metric;
                  orkgp:HAS_VALUE         ?value.
  BIND(xsd:float(?value) AS?value)
 ?cont         orkgp:HAS_BENCHMARK     ?benchmark.
 ?cont         rdfs:label               ?cont_lbl.
  BIND(xsd:float(?cont_lbl) AS?cont_lbl)
 ?model      orkgp:HAS_MODEL          ?cont;
               orkgp:P31               ?model.
 ?model      rdfs:label               ?model_lbl.
}
ORDER BY DESC(?value)
LIMIT 5
```     .formatting for the SPARQL query
```sparql
SELECT DISTINCT?model?model_lbl
WHERE {
 ?metric     a       orkgc:Metric;
              rdfs:label ?metric_lbl.
  FILTER (str(?metric_lbl) = "RE+ Micro F1")
 ?benchmark      orkgp:HAS_DATASET      ?dataset.
 ?dataset        orkgp:HAS_EVALUATION   ?eval.
 ?eval           orkgp:HAS_METRIC        ?metric;
                  orkgp:HAS_VALUE         ?value.
  BIND(xsd:float(?value) AS?value)
 ?cont         orkgp:HAS_BENCHMARK     ?benchmark.
 ?cont         rdfs:label               ?cont_lbl.
  BIND(xsd:float(?cont_lbl) AS?cont_lbl)
 ?model      orkgp:HAS_MODEL          ?cont;
               orkgp:P31               ?model.
 ?model      rdfs:label               ?model_lbl.
}
ORDER BY DESC(?value)
LIMIT 5
```     .formatting for the SPARQL query
```sparql
SELECT DISTINCT?model?model_lbl
WHERE {
 ?metric     a       orkgc:Metric;
              rdfs:label ?metric_lbl.
  FILTER (str(?metric_lbl) = "RE+ Micro F1")
 ?benchmark      orkgp:HAS_DATASET      ?dataset.
 ?dataset        orkgp:HAS_EVALUATION   ?eval.
 ?eval           orkgp:HAS_METRIC        ?metric;
                  orkgp:HAS_VALUE         ?value.
  BIND(xsd:float(?value) AS?value)
 ?
