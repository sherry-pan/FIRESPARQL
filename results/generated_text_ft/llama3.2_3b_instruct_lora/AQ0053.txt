Question:
Could you provide a list of models that have been tested on the NYT29 benchmark dataset?

Generated SPARQL:
 SELECT?model?model_lbl
     WHERE {
      ?dataset       a                orkgc:Dataset;
                      rdfs:label      ?dataset_lbl.
       FILTER (str(?dataset_lbl) = "NYT29")
      ?benchmark      orkgp:HAS_DATASET      ?dataset;
                      orkgp:HAS_EVALUATION   ?eval.
      ?eval           orkgp:HAS_VALUE        ?value;
                      orkgp:HAS_BENCHMARK     ?benchmark.
       OPTIONAL {?eval           orkgp:HAS_MODEL         ?model.
                ?model      rdfs:label              ?model_lbl.}
      ?cont         orkgp:HAS_BENCHMARK     ?benchmark;
                    orkgp:HAS_MODEL         ?model.
      ?cont         orkgpp:HAS_SOURCE_CODE   ?source.
       OPTIONAL {?source      orkgp:HAS_MODEL         ?model.
                ?model      rdfs:label              ?model_lbl.}
      ?paper        orkgp:HAS_SOURCE_CODE   ?source;
                    orkgp:HAS Cont        ?cont.
      ?paper        rdfs:label               ?paper_lbl.
      ?model      rdfs:label              ?model_lbl.
      }    LIMIT 100;    OFFSET 0;    BIND(xsd:integer("0") AS?offset)    BIND(xsd:integer("100") AS?limit)    RETURNING?model_lbl,?model.    }    LIMIT 100;    OFFSET 0;    BIND(xsd:integer("0") AS?offset)    BIND(xsd:integer("100") AS?limit)    RETURNING?model_lbl,?model.    }    LIMIT 100;    OFFSET 0;    BIND(xsd:integer("0") AS?offset)    BIND(xsd:integer("100") AS?limit)    RETURNING?model_lbl,?model.    }    LIMIT 100;    OFFSET 0;    BIND(xsd:integer("0") AS?offset)    BIND(xsd:integer("100") AS?limit)    RETURNING?model_lbl,?model.    }    LIMIT 100;    OFFSET 0;    BIND(xsd:integer("0") AS?offset)    BIND(xsd:integer("100") AS?limit)    RETURNING?model_lbl,?model.    }    LIMIT 100;    OFFSET 0;    BIND(xsd:integer("0") AS?offset)    BIND(xsd:integer("100") AS?limit)    RETURNING?model_lbl,?model.    }    LIMIT 100;    OFFSET 0;    BIND(xsd:integer("0") AS?offset)    BIND(xsd:integer("100") AS?limit)    RETURNING?model_lbl,?model.    }    LIMIT 100;    OFFSET 0;    BIND(xsd:integer("0") AS?offset)    BIND(xsd:integer("100") AS?limit)    RETURNING?model_lbl,?model.    }    LIMIT 100;    OFFSET 0;    BIND(xsd:integer("0") AS?offset)    BIND(xsd:integer("100") AS?limit)    RETURNING?model_lbl,?model.    }    LIMIT 100;    OFFSET 0;    BIND(xsd:integer("0") AS?offset)    BIND(xsd:integer("100") AS?limit)    RETURNING?model_lbl,?model.    }    LIMIT 100;    OFFSET 0;    BIND(xsd:integer("0") AS?offset)    BIND(xsd:integer("100") AS?limit)    RETURNING?model_lbl,?model.    }    LIMIT 100;    OFFSET 0;    BIND(xsd:integer("0") AS?offset)    BIND(xsd:integer("100") AS?limit)    RETURNING?model_lbl,?model.    }    LIMIT 100;    OFFSET 0;    BIND(xsd:integer("0") AS?offset)    BIND(xsd:integer("100") AS?limit)    RETURNING?model_lbl,?model.    }    LIMIT 100;    OFFSET 0;    BIND(xsd:integer("0") AS?offset)    BIND(xsd:integer("100")
