Question:
What is the top benchmark score and its metric on the MAZEA dataset?

Generated SPARQL:
 SELECT DISTINCT?metric?metric_lbl (MAX(?value) AS?score)
     WHERE {
      ?dataset       a                orkgc:Dataset;
                      rdfs:label      ?dataset_lbl.
       FILTER (str(?dataset_lbl) = "MAZEA")
      ?benchmark      orkgp:HAS_DATASET      ?dataset.
      ?cont          orkgp:HAS_BENCHMARK     ?benchmark.
      ?eval         orkgp:P31               ?cont;
                     orkgp:HAS_VALUE        ?value.
      ?metric       rdfs:label              ?metric_lbl;
                     orkgp:P32               ?eval.
      ?metric       rdfs:label              ?metric_lbl.
     } ORDER BY DESC(?score) LIMIT 1.     ```
    ORKG Query 1: ```
    SELECT DISTINCT?metric?metric_lbl (MAX(?value) AS?score)
    WHERE {
     ?dataset       a                orkgc:Dataset;
                     rdfs:label      ?dataset_lbl.
      FILTER (str(?dataset_lbl) = "MAZEA")
     ?benchmark      orkgp:HAS_DATASET      ?dataset.
     ?cont          orkgp:HAS_BENCHMARK     ?benchmark.
     ?eval         orkgp:P31               ?cont;
                    orkgp:HAS_VALUE        ?value.
     ?metric       rdfs:label              ?metric_lbl;
                    orkgp:P32               ?eval.
     ?metric       rdfs:label              ?metric_lbl.
    } ORDER BY DESC(?score) LIMIT 1.
    ``` 
    Note that the `FILTER` condition `str(?dataset_lbl) = "MAZEA"` is case-sensitive. If the dataset label is "MAZEA" with a different case, the query will not return any results. To make the query case-insensitive, you can use the `str(?dataset_lbl) = "MAZEA"` condition. 
    Note that the `ORDER BY` and `LIMIT` clauses are not necessary in this case, as the query will still return the top benchmark score and its metric. However, they are included in the original query to ensure that the result is sorted in descending order and limited to a single row. 

    To get the top metric value for a specific dataset, you can replace the `FILTER (str(?dataset_lbl) = "MAZEA")` condition with a condition that filters on the dataset label. For example, `FILTER (str(?dataset_lbl) = "CIFAR-10")`. 

    To get the top metric value for a specific metric, you can add a condition to the `WHERE` clause that filters on the metric label. For example, `?metric       orkgp:P31               ?cont;
                      orkgp:HAS_VALUE        ?value.
                      orkgp:HAS_METRIC        ?metric_lbl.
                      FILTER (str(?metric_lbl) = "Accuracy")`. 

    To get the top metric value for a specific dataset and metric, you can combine the conditions in the `FILTER` clause. For example, `FILTER (str(?dataset_lbl) = "CIFAR-10" AND str(?metric_lbl) = "Accuracy")`. 

    To get the top metric value for multiple datasets, you can use the `UNION` operator in the `SELECT` clause. For example, `SELECT DISTINCT?metric?metric_lbl (MAX(?value) AS?score) 
    WHERE {
     ?dataset       a                orkgc:Dataset;
                     rdfs:label      ?dataset_lbl.
      FILTER (str(?dataset_lbl) = "MAZEA" OR str(?dataset_lbl) = "CIFAR-10")
     ?benchmark      orkgp:HAS_DATASET      ?dataset.
     ?cont          orkgp:HAS_BENCHMARK     ?benchmark.
     ?eval         orkgp:P31               ?cont;
                    orkgp:HAS_VALUE        ?value.
     ?metric       rdfs:label              ?metric_lbl;
                    orkgp:P32               ?eval.
     ?metric       rdfs:label              ?metric_lbl.
    } ORDER BY DESC(?score) LIMIT 1.``
    ORKG Query 2: ```
    SELECT DISTINCT?metric?metric_lbl (MAX(?value) AS?score)
    WHERE {
     ?dataset       a                orkgc:Dataset;
                    
