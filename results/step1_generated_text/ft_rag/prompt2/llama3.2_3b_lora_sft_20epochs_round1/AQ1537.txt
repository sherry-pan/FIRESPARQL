Question:
What is the name of the top performing model in terms of Number of params score when benchmarked on the Penn Treebank (Character Level) dataset?

Generated SPARQL:
 SELECT?model?model_lbl
     WHERE {
      ?model 
      ?property_iri_1 a orkgc:Property;
                  rdfs:label?property_lbl_1.
         FILTER(REGEX(?property_lbl_1, "Number of params"))
        ?model?property_iri_2.
        ?property_iri_2 rdfs:label?property_lbl_2.
         FILTER(REGEX(?property_lbl_2, "score"))
        ?model?eval_1.
        ?eval_1 orkgp:HAS_VALUE?value_1.
         BIND(xsd:float(?value_1) AS?number_of_params)
        ?model?benchmark_1.
        ?benchmark_1 orkgp:P31?cont_1.
        ?cont_1 rdfs:label?cont_lbl_1.
         FILTER(REGEX(?cont_lbl_1, "Penn Treebank (Character Level)"))
        ?model?property_iri_3.
        ?property_iri_3 rdfs:label?property_lbl_3.
         FILTER(REGEX(?property_lbl_3, "evaluation"))
        ?property_iri_3 orkgp:P31?eval_2.
        ?eval_2 orkgp:HAS_VALUE?value_2.
         BIND(xsd:float(?value_2) AS?evaluation)
         FILTER(?evaluation =?number_of_params)
        ?model?property_iri_4.
        ?property_iri_4 rdfs:label?property_lbl_4.
         FILTER(REGEX(?property_lbl_4, "top"))
        ?model?property_iri_5.
        ?property_iri_5 rdfs:label?property_lbl_5.
         FILTER(REGEX(?property_lbl_5, "performing"))
        ?model?property_iri_6.
        ?property_iri_6 rdfs:label?property_lbl_6.
         FILTER(REGEX(?property_lbl_6, "model"))
        ?model?property_iri_7.
        ?property_iri_7 rdfs:label?property_lbl_7.
         FILTER(REGEX(?property_lbl_7, "in"))
        ?model?property_iri_8.
        ?property_iri_8 rdfs:label?property_lbl_8.
         FILTER(REGEX(?property_lbl_8, "terms"))
        ?model?property_iri_9.
        ?property_iri_9 rdfs:label?property_lbl_9.
         FILTER(REGEX(?property_lbl_9, "of"))
        ?model?property_iri_10.
        ?property_iri_10 rdfs:label?property_lbl_10.
         FILTER(REGEX(?property_lbl_10, "the"))
        ?model?property_iri_11.
        ?property_iri_11 rdfs:label?property_lbl_11.
         FILTER(REGEX(?property_lbl_11, "ask"))
        ?model?property_iri_12.
        ?property_iri_12 rdfs:label?property_lbl_12.
         FILTER(REGEX(?property_lbl_12, "for"))
        ?model?property_iri_13.
        ?property_iri_13 rdfs:label?property_lbl_13.
         FILTER(REGEX(?property_lbl_13, "the"))
        ?model?property_iri_14.
        ?property_iri_14 rdfs:label?property_lbl_14.
         FILTER(REGEX(?property_lbl_14, "Number of params"))
        ?model?property_iri_15.
        ?property_iri_15 rdfs:label?property_lbl_15.
         FILTER(REGEX(?property_lbl_15, "score"))
        ?model?property_iri_16.
        ?property_iri_16 rdfs:label?property_lbl_16.
         FILTER(REGEX(?property_lbl_16, "when"))
        ?model?property_iri_17.
        ?property_iri_17 rdfs:label?property_lbl_17.
         FILTER(REGEX(?property_lbl_17, "benchmarked"))
        ?model?property_iri_18.
        ?property_iri_18 rdfs:label?property_lbl_18.
         FILTER(REGEX(?property_lbl_18, "on"))
        ?model?property_iri_19.
        ?property_iri_19 rdfs:label?property_lbl_19.
         FILTER(REGEX(?property_lbl_19, "the"))
        ?model?property_iri_20.
        ?property_iri_20 rdfs:label?property_lbl_20.
         FILTER(REGEX(?property_lbl_20, "Penn Treebank (Character Level)"))
        ?model?property_iri_21.
        ?property_iri_21 rdfs:label?property_lbl_21.
         FILTER(REGEX(?property_lbl_21, "dataset"))
        ?model?
