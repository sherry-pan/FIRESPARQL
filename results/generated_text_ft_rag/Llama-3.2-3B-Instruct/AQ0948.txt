Question:
What evaluation metrics are commonly used when benchmarking models on the Atari 2600 Skiing dataset?

Generated SPARQL:
 SELECT DISTINCT?metric?metric_lbl
     WHERE {
      ?dataset       a            orkgc:Dataset;
                      rdfs:label      ?dataset_lbl.
       FILTER (str(?dataset_lbl) = "Atari 2600 Skiing")
      ?benchmark      orkgp:HAS_DATASET      ?dataset;
                      orkgp:HAS_EVALUATION   ?eval.
      ?eval           rdfs:label              ?metric_lbl.
      ?eval           orkgp:P31               ?metric.
      ?metric         rdfs:label              ?metric_lbl.
     }```SPARQL
```sql
SELECT DISTINCT?metric?metric_lbl
WHERE {
 ?dataset       a            orkgc:Dataset;
                 rdfs:label      ?dataset_lbl.
  FILTER (str(?dataset_lbl) = "Atari 2600 Skiing")
 ?benchmark      orkgp:HAS_DATASET      ?dataset;
                 orkgp:HAS_EVALUATION   ?eval.
 ?eval           rdfs:label              ?metric_lbl.
 ?eval           orkgp:P31               ?metric.
 ?metric         rdfs:label              ?metric_lbl.
}
```SPARQL
```python
from orkg import query
from orkg import dataset

def get_evaluation_metrics():
    # Define the query
    query_str = """
    SELECT DISTINCT?metric?metric_lbl
    WHERE {
     ?dataset       a            orkgc:Dataset;
                     rdfs:label      ?dataset_lbl.
      FILTER (str(?dataset_lbl) = "Atari 2600 Skiing")
     ?benchmark      orkgp:HAS_DATASET      ?dataset;
                     orkgp:HAS_EVALUATION   ?eval.
     ?eval           rdfs:label              ?metric_lbl.
     ?eval           orkgp:P31               ?metric.
     ?metric         rdfs:label              ?metric_lbl.
    }
    """

    # Execute the query
    results = query(query_str, dataset=dataset)

    # Convert the results to a list of dictionaries
    results_list = [{"uri": result["?metric"], "label": result["?metric_lbl"]} for result in results]

    return results_list

# Execute the function
evaluation_metrics = get_evaluation_metrics()
print(evaluation_metrics)
```python
```python
SELECT DISTINCT?metric?metric_lbl
WHERE {
 ?dataset       a            orkgc:Dataset;
                 rdfs:label      ?dataset_lbl.
  FILTER (str(?dataset_lbl) = "Atari 2600 Skiing")
 ?benchmark      orkgp:HAS_DATASET      ?dataset;
                 orkgp:HAS_EVALUATION   ?eval.
 ?eval           rdfs:label              ?metric_lbl.
 ?eval           orkgp:P31               ?metric.
 ?metric         rdfs:label              ?metric_lbl.
}
```SPARQL
```python
from orkg import query
from orkg import dataset

def get_evaluation_metrics():
    # Define the query
    query_str = """
    SELECT DISTINCT?metric?metric_lbl
    WHERE {
     ?dataset       a            orkgc:Dataset;
                     rdfs:label      ?dataset_lbl.
      FILTER (str(?dataset_lbl) = "Atari 2600 Skiing")
     ?benchmark      orkgp:HAS_DATASET      ?dataset;
                     orkgp:HAS_EVALUATION   ?eval.
     ?eval           rdfs:label              ?metric_lbl.
     ?eval           orkgp:P31               ?metric.
     ?metric         rdfs:label              ?metric_lbl.
    }
    """

    # Execute the query
    results = query(query_str, dataset=dataset)

    # Convert the results to a list of dictionaries
    results_list = [{"uri": result["?metric"], "label": result["?metric_lbl"]} for result in results]

    return results_list

# Execute the function
evaluation_metrics = get_evaluation_metrics()
print(evaluation_metrics)
```python
```python
SELECT DISTINCT?metric?metric_lbl
WHERE {
 ?dataset       a            orkgc:Dataset;
                 rdfs:label      ?dataset_lbl.
  FILTER (str(?dataset_lbl) = "Atari 2600 Skiing")
 ?benchmark      orkgp:HAS_DATASET      ?dataset;
                 orkgp:HAS_EVALUATION   ?eval.
 ?eval           rdfs:label              ?metric_lbl.
 ?eval           orkgp:P31               ?metric.
 ?metric         rdfs:label              ?metric_lbl.
}
```SPARQL
```python
from orkg import query
from orkg import dataset

def get_evaluation_metrics():
    # Define the query
    query_str = """
    SELECT DISTINCT?metric?metric_lbl
    WHERE {
     ?dataset       a            orkgc:Dataset;

