Question:
Can you provide the highest benchmark result, including the metric and score, for the Natural Questions (long) dataset?

Generated SPARQL:
 SELECT DISTINCT?metric?metric_lbl (MAX(?value) AS?score)
    WHERE {
     ?dataset       a                orkgc:Dataset;
                     rdfs:label      ?dataset_lbl.
      FILTER (str(?dataset_lbl) = "Natural Questions (long)")
     ?benchmark      orkgp:HAS_DATASET      ?dataset;
                      orkgp:HAS_EVALUATION   ?eval.
     ?eval           orkgp:HAS_VALUE        ?value.
      OPTIONAL {?eval           orkgp:HAS_METRIC        ?metric.
              ?metric          rdfs:label              ?metric_lbl.}
     ?cont         orkgp:HAS_BENCHMARK     ?benchmark.
      OPTIONAL {?cont      orkgp:HAS_MODEL         ?model.
               ?model      rdfs:label              ?model_lbl.}
    } ORDER BY DESC(?score);     LIMIT 1;      SELECT?metric?metric_lbl
    WHERE {
     ?dataset       a                orkgc:Dataset;
                     rdfs:label      ?dataset_lbl.
      FILTER (str(?dataset_lbl) = "Natural Questions (long)")
     ?benchmark      orkgp:HAS_DATASET      ?dataset;
                      orkgp:HAS_EVALUATION   ?eval.
     ?eval           orkgp:HAS_VALUE        ?value.
      OPTIONAL {?eval           orkgp:HAS_METRIC        ?metric.
              ?metric          rdfs:label              ?metric_lbl.}
     ?cont         orkgp:HAS_BENCHMARK     ?benchmark.
      OPTIONAL {?cont      orkgp:HAS_MODEL         ?model.
               ?model      rdfs:label              ?model_lbl.}
     ?cont         orkgp:HAS_MODEL         ?model.
     ?model      rdfs:label              ?model_lbl.
      BIND(xsd:integer(?model_lbl) AS?model_lbl_int)
      BIND(xsd:integer(?value) AS?value_int)
      BIND(xsd:string(?metric_lbl) AS?metric_lbl_str)
      BIND(xsd:string(?dataset_lbl) AS?dataset_lbl_str)
    } ORDER BY DESC(?value_int);     LIMIT 1;      SELECT?metric?metric_lbl (MAX(?value) AS?score)
    WHERE {
     ?dataset       a                orkgc:Dataset;
                     rdfs:label      ?dataset_lbl.
      FILTER (str(?dataset_lbl) = "Natural Questions (long)")
     ?benchmark      orkgp:HAS_DATASET      ?dataset;
                      orkgp:HAS_EVALUATION   ?eval.
     ?eval           orkgp:HAS_VALUE        ?value.
      OPTIONAL {?eval           orkgp:HAS_METRIC        ?metric.
              ?metric          rdfs:label              ?metric_lbl.}
     ?cont         orkgp:HAS_BENCHMARK     ?benchmark.
      OPTIONAL {?cont      orkgp:HAS_MODEL         ?model.
               ?model      rdfs:label              ?model_lbl.}
     ?cont         orkgp:HAS_MODEL         ?model.
     ?model      rdfs:label              ?model_lbl.
      BIND(xsd:integer(?model_lbl) AS?model_lbl_int)
      BIND(xsd:integer(?value) AS?value_int)
      BIND(xsd:string(?metric_lbl) AS?metric_lbl_str)
      BIND(xsd:string(?dataset_lbl) AS?dataset_lbl_str)
    } ORDER BY DESC(?value_int);     LIMIT 1;      SELECT?metric?metric_lbl
    WHERE {
     ?dataset       a                orkgc:Dataset;
                     rdfs:label      ?dataset_lbl.
      FILTER (str(?dataset_lbl) = "Natural Questions (long)")
     ?benchmark      orkgp:HAS_DATASET      ?dataset;
                      orkgp:HAS_EVALUATION   ?eval.
     ?eval           orkgp:HAS_VALUE        ?value.
      OPTIONAL {?eval           orkgp:HAS_METRIC        ?metric.
              ?metric          rdfs:label              ?metric_lbl.}
     ?cont         orkgp:HAS_BENCHMARK     ?benchmark.
      OPTIONAL {?cont      orkgp:HAS_MODEL         ?model.
               ?model      rdfs:label              ?model_lbl.}
     ?cont         orkgp:HAS_MODEL         ?model.
     ?model     
