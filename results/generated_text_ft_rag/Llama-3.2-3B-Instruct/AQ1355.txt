Question:
Can you provide the highest benchmark result, including the metric and score, for the Sequential MNIST dataset?

Generated SPARQL:
 SELECT?metric,?score
    ?dataset       a            orkgc:Dataset;
                    rdfs:label   ?dataset_lbl.
     FILTER (str(?dataset_lbl) = "Sequential MNIST")
    ?benchmark      orkgp:HAS_DATASET      ?dataset;
                     orkgp:HAS_EVALUATION   ?eval.
     OPTIONAL {?eval           orkgp:HAS_METRIC        ?metric.
             ?metric           rdfs:label               ?metric_lbl.}
     OPTIONAL {?eval           orkgp:HAS_SCORE         ?score.
             ?score           rdfs:label               ?score_lbl.}
     ORDER BY DESC(?score)
     LIMIT 1
```sql
-- 
-- This is a SPARQL query that can be used to answer the given question. 
-- The query is designed to work with the Open Research Knowledge Graph (ORKG) and 
-- is based on the provided context and input question. 
-- The query retrieves the highest benchmark result for the Sequential MNIST dataset, 
-- including the metric and score. 
-- 
-- Note: This query is for illustrative purposes only and may need to be adjusted 
--       to work with the actual ORKG RDF data. 
-- 
-- Parameters:
--   - dataset: The dataset for which to retrieve the highest benchmark result.
--     This should be a string that matches the label of the dataset in the ORKG.
-- 
-- Returns:
--   - The highest benchmark result for the specified dataset, including the metric and score.
--     This is represented as a tuple containing the metric and score.
-- 
-- Example usage:
--   - To retrieve the highest benchmark result for the Sequential MNIST dataset, 
--     use the following query:
--     ```
--     PREFIX orkgp: <http://orkg.org/orkg/prefix/>
--     SELECT?metric,?score
--    ?dataset       a            orkgc:Dataset;
--                     rdfs:label   ?dataset_lbl.
--     FILTER (str(?dataset_lbl) = "Sequential MNIST")
--    ?benchmark      orkgp:HAS_DATASET      ?dataset;
--                     orkgp:HAS_EVALUATION   ?eval.
--     OPTIONAL {?eval           orkgp:HAS_METRIC        ?metric.
--             ?metric           rdfs:label               ?metric_lbl.}
--     OPTIONAL {?eval           orkgp:HAS_SCORE         ?score.
--             ?score           rdfs:label               ?score_lbl.}
--     ORDER BY DESC(?score)
--     LIMIT 1
--     ```
-- 
-- Note: The actual query may need to be adjusted based on the actual structure of the ORKG RDF data.
```sql
-- 
-- This is a SPARQL query that can be used to answer the given question. 
-- The query is designed to work with the Open Research Knowledge Graph (ORKG) and 
-- is based on the provided context and input question. 
-- The query retrieves the highest benchmark result for the Sequential MNIST dataset, 
-- including the metric and score. 
-- 
-- Note: This query is for illustrative purposes only and may need to be adjusted 
--       to work with the actual ORKG RDF data. 
-- 
-- Parameters:
--   - dataset: The dataset for which to retrieve the highest benchmark result.
--     This should be a string that matches the label of the dataset in the ORKG.
-- 
-- Returns:
--   - The highest benchmark result for the specified dataset, including the metric and score.
--     This is represented as a tuple containing the metric and score.
-- 
-- Example usage:
--   - To retrieve the highest benchmark result for the Sequential MNIST dataset, 
--     use the following query:
--     ```
--     PREFIX orkgp: <http://orkg.org/orkg/prefix/>
--     SELECT?metric,?score
--    ?dataset       a            orkgc:Dataset;
--                     rdfs:label   ?dataset_lbl.
--     FILTER (str(?dataset_lbl) = "Sequential MNIST")
--    ?benchmark      orkgp:HAS_DATASET      ?dataset;
--                     orkgp:HAS_EVALUATION   ?eval.
--     OPTIONAL {?eval           orkgp:HAS_METRIC        ?metric.
--             ?metric           rdfs:label               ?metric_lbl.}
--     OPTIONAL {?eval           orkgp:HAS_SCORE         ?score.
--             ?score           rdfs:label               ?score_lbl.}
--     ORDER BY DESC(?score)
--     LIMIT 1
--     ```
-- 
-- Note: The actual query may need to be adjusted based on the actual structure of the ORKG RDF data.
```sql
-- 
-- This is a SPARQL query that can be used to answer the given question. 
-- The query is designed to work with the Open
