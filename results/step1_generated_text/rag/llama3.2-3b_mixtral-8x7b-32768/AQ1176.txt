Question:
What is the highest benchmark result achieved on the WNLI dataset, including the metric and its value?

Generated SPARQL:
 SELECT?metric?value
     WHERE {
   ?dataset a orkgc:Dataset.
   ?dataset orkgc:hasBenchmarkResult?result.
   ?result orkgp:hasMetric?metric.
   ?result orkgp:hasValue?value.
   ?dataset orkgc:hasDataset?dataset1.
   ?dataset1 a orkgr:R122690.
   ?dataset1 orkgp:hasMetric?metric.
   ?dataset1 orkgp:hasValue?value.
   ?dataset1 orkgr:R122690.
   ?dataset1 orkgp:hasMetric?metric.
   ?dataset1 orkgp:hasValue?value.
    FILTER (str(?metric) = "F1").
    FILTER (str(?value) = "0.99").
    } 
    } 
    } 

    Note: The provided SPARQL query is just a sample and may need to be adjusted based on the actual structure of the ORKG.
    The provided SPARQL query is designed to find the highest benchmark result achieved on the WNLI dataset, including the metric and its value.
    The query first identifies the WNLI dataset and then filters the results to only include the metric and value with F1 and 0.99 respectively.
    Please note that the actual structure of the ORKG may require adjustments to the query. 

```python
import pyodbc

# Define the connection string
conn_str = "DRIVER={ODBC Driver 17 for SQL Server};SERVER=localhost;DATABASE=orkgr;UID=your_username;PWD=your_password"

# Create a connection object
conn = pyodbc.connect(conn_str)

# Define the cursor object
cursor = conn.cursor()

# Define the SPARQL query
sparql_query = """
    SELECT?metric?value
    WHERE {
   ?dataset a orkgc:Dataset.
   ?dataset orkgc:hasBenchmarkResult?result.
   ?result orkgp:hasMetric?metric.
   ?result orkgp:hasValue?value.
   ?dataset orkgc:hasDataset?dataset1.
   ?dataset1 a orkgr:R122690.
   ?dataset1 orkgp:hasMetric?metric.
   ?dataset1 orkgp:hasValue?value.
   ?dataset1 orkgr:R122690.
   ?dataset1 orkgp:hasMetric?metric.
   ?dataset1 orkgp:hasValue?value.
    FILTER (str(?metric) = "F1").
    FILTER (str(?value) = "0.99").
    }
"""

# Execute the SPARQL query
cursor.execute(sparql_query)

# Fetch the results
results = cursor.fetchall()

# Print the results
for row in results:
    print(row)
```

Note that you need to replace the placeholders (e
