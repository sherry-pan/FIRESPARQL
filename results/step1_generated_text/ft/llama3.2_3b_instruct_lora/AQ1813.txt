Question:
What is the best performing model benchmarking the iNaturalist 2018 dataset in terms of Top-1 Accuracy metric?

Generated SPARQL:
 SELECT?metric,?metric_lbl,?cont,?cont_lbl,?model,?model_lbl,?model_eval,?model_eval_lbl
    WHERE {
     ?dataset       a                orkgc:Dataset;
                     rdfs:label      ?dataset_lbl.
      FILTER (str(?dataset_lbl) = "iNaturalist 2018")
     ?benchmark      orkgp:HAS_DATASET      ?dataset;
                      orkgp:HAS_EVALUATION   ?eval.
     ?eval           orkgp:HAS_VALUE        ?value;
                      orkgp:HAS_METRIC        ?metric.
      OPTIONAL {?eval           orkgp:HAS_BENCHMARK     ?benchmark.
               ?benchmark      orkgp:HAS_MODEL         ?model.}
      OPTIONAL {?eval           orkgp:HAS_MODEL_EVALUATION?model_eval.
               ?model_eval      orkgp:HAS_METRIC        ?metric.
               ?model_eval      rdfs:label              ?model_eval_lbl.}
      OPTIONAL {?eval           orkgp:HAS_MODEL         ?model.
               ?model      rdfs:label              ?model_lbl.}
      OPTIONAL {?eval           orkgp:HAS_MODEL_EVALUATION?model_eval.
               ?model           orkgp:HAS_METRIC        ?metric.
               ?metric          rdfs:label              ?metric_lbl.}
     ?cont         orkgp:HAS_BENCHMARK     ?benchmark.
     ?cont         rdfs:label              ?cont_lbl.
     ?model      ?cont           orkgp:HAS_MODEL         ?model.
     ?model_lbl   rdfs:label              ?model_lbl.
     ?cont      ?cont           orkgp:HAS_EVALUATION   ?eval.
     ?cont_lbl   rdfs:label              ?cont_lbl.
     ?cont      ?cont           orkgp:HAS_VALUE        ?value.
     ?metric     ?eval           orkgp:HAS_VALUE        ?value.
     ?metric     ?metric         orkgp:HAS_METRIC        ?metric.
     ?metric     ?metric         rdfs:label              ?metric_lbl.
      BIND(xsd:integer(?value) AS?value)
      BIND(xsd:integer(?metric_lbl) AS?metric_lbl)
      BIND(xsd:integer(?cont_lbl) AS?cont_lbl)
      BIND(xsd:integer(?model_lbl) AS?model_lbl)
      BIND(xsd:integer(?model_eval_lbl) AS?model_eval_lbl)
      BIND(xsd:string(?cont) AS?cont)
      BIND(xsd:string(?model) AS?model)
      BIND(xsd:string(?cont_lbl) AS?cont_lbl)
      BIND(xsd:string(?model_lbl) AS?model_lbl)
      BIND(xsd:string(?cont) AS?cont)
      BIND(xsd:string(?metric_lbl) AS?metric_lbl)
      BIND(xsd:string(?cont_lbl) AS?cont_lbl)
      BIND(xsd:string(?model_eval_lbl) AS?model_eval_lbl)
      BIND(xsd:string(?model) AS?model)
      BIND(xsd:string(?cont) AS?cont)
      ORDER BY DESC(xsd:integer(?value))
    }    
    LIMIT 1.    
    SELECT?metric,?metric_lbl,?cont,?cont_lbl,?model,?model_lbl,?model_eval,?model_eval_lbl
    WHERE {
     ?dataset       a                orkgc:Dataset;
                     rdfs:label      ?dataset_lbl.
      FILTER (str(?dataset_lbl) = "iNaturalist 2018")
     ?benchmark      orkgp:HAS_DATASET      ?dataset;
                      orkgp:HAS_EVALUATION   ?eval.
     ?eval           orkgp:HAS_VALUE        ?value;
                      orkgp:HAS_METRIC        ?metric.
      OPTIONAL {?eval           orkgp:HAS_BENCHMARK     ?benchmark.
               ?benchmark      orkgp:HAS_MODEL         ?model.}
      OPTIONAL {?eval           orkgp:HAS_MODEL_EVALUATION?model_eval.
               ?model_eval      orkgp:HAS_METRIC        ?metric.
               ?model_eval      rdfs:label              ?model_eval_lbl.}
      OPTIONAL {?eval           orkgp:HAS_MODEL         ?model.
               ?model      rdfs:label
