Question:
Indicate the model that performed best in terms of Accuracy metric on the CommonsenseQA benchmark dataset?

Generated SPARQL:
 ```sparql
    SELECT?model?model_lbl
    WHERE {
     ?metric     a       orkgc:Metric;
                  rdfs:label ?metric_lbl.
      FILTER (str(?metric_lbl) = "Accuracy")
     ?benchmark      orkgp:HAS_DATASET       ?dataset.
     ?cont           orkgp:HAS_BENCHMARK     ?benchmark.
     ?cont           orkgp:P31               ?model.
     ?model          rdfs:label              ?model_lbl.
     ?cont           orkgp:HAS_EVALUATION   ?eval.
     ?eval           orkgp:P31               ?eval_model.
     ?eval           rdfs:label              ?eval_lbl.
      FILTER (str(?eval_lbl) = "Best")
     ?paper           orkgp:P31               ?eval_model.
     ?paper           orkgp:HAS_EVALUATION   ?eval.
     ?paper           rdfs:label              ?paper_lbl.
      FILTER (str(?paper_lbl) = "Contribution")
     ?contrib         rdfs:label              ?model_lbl.
     ?contrib         orkgp:P31               ?model.
     ?contrib         orkgp:HAS_EVALUATION   ?eval.
     ?contrib         orkgp:HAS_DATASET       ?dataset.
     ?model          orkgp:HAS_DATASET       ?dataset.
     ?dataset       rdfs:label              ?dataset_lbl.
      FILTER (str(?dataset_lbl) = "CommonsenseQA")
    }
    ```    END SPARQL Query      ``` 
    END ORKG RDF DATA      ``` 
    END ORKG CONTEXT      ``` 
    END ORKG QUESTION      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ``` 
    END ORKG      ```
