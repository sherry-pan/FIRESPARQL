Question:
Can you provide the highest benchmark result, including the metric and score, for the Cart Pole (OpenAI Gym) dataset?

Generated SPARQL:
 SELECT?metric,?score
     WHERE {
      ?dataset       a                orkgc:Dataset;
                      rdfs:label      ?dataset_lbl.
         FILTER (str(?dataset_lbl) = "Cart Pole (OpenAI Gym)")
      ?benchmark      orkgp:HAS_DATASET      ?dataset;
                      orkgp:HAS_EVALUATION   ?eval.
        ?eval           orkgp:HAS_VALUE        ?value;
                         orkgp:HAS_METRIC        ?metric.
      ?cont         orkgp:HAS_BENCHMARK     ?benchmark;
                     orkgp:HAS_MODEL         ?model.
        ?model      rdfs:label              ?model_lbl.
       BIND(xsd:integer(?model_lbl) AS?model_lbl_value)
      ?cont         orkgp:HAS_SOURCE_CODE     ?sourcecode.
        ?sourcecode orkgp:HAS_MODEL         ?model.
        ?model      rdfs:label              ?model_lbl.
       BIND(xsd:integer(?model_lbl) AS?model_lbl_value)
      ?cont         orkgp:HAS_DATASET        ?dataset;
                      orkgp:HAS_MODEL         ?model.
        ?model      rdfs:label              ?model_lbl.
       BIND(xsd:integer(?model_lbl) AS?model_lbl_value)
       OPTIONAL {?cont      orkgp:HAS_HIGHEST_BENCHMARK   ?highest.
                ?highest      orkgp:HAS_VALUE            ?value.
                ?value       orkgp:HAS_METRIC            ?metric.}
       ORDER BY DESC(?metric)
       LIMIT 1
      ```


      SELECT?metric,?score
      WHERE {
       ?dataset       a                orkgc:Dataset;
                       rdfs:label      ?dataset_lbl.
          FILTER (str(?dataset_lbl) = "Cart Pole (OpenAI Gym)")
       ?benchmark      orkgp:HAS_DATASET      ?dataset;
                      orkgp:HAS_EVALUATION   ?eval.
         ?eval           orkgp:HAS_VALUE        ?value;
                          orkgp:HAS_METRIC        ?metric.
       ?cont         orkgp:HAS_BENCHMARK     ?benchmark;
                    orkgp:HAS_MODEL         ?model.
         ?model      rdfs:label              ?model_lbl.
        BIND(xsd:integer(?model_lbl) AS?model_lbl_value)
       ?cont         orkgp:HAS_SOURCE_CODE     ?sourcecode.
         ?sourcecode orkgp:HAS_MODEL         ?model.
         ?model      rdfs:label              ?model_lbl.
        BIND(xsd:integer(?model_lbl) AS?model_lbl_value)
       ?cont         orkgp:HAS_DATASET        ?dataset;
                    orkgp:HAS_MODEL         ?model.
         ?model      rdfs:label              ?model_lbl.
        BIND(xsd:integer(?model_lbl) AS?model_lbl_value)
       ?cont         orkgp:HAS_HIGHEST_BENCHMARK   ?highest.
         ?highest      orkgp:HAS_VALUE            ?value.
         ?value       orkgp:HAS_METRIC            ?metric.
       ?metric      orkgp:HAS_VALUE            ?value.
       ?score      orkgp:HAS_VALUE            ?value.
        ORDER BY DESC(?metric)
        LIMIT 1
      ```; ```sql
      SELECT?metric,?score
      WHERE {
       ?dataset       a                orkgc:Dataset;
                       rdfs:label      ?dataset_lbl.
          FILTER (str(?dataset_lbl) = "Cart Pole (OpenAI Gym)")
       ?benchmark      orkgp:HAS_DATASET      ?dataset;
                      orkgp:HAS_EVALUATION   ?eval.
         ?eval           orkgp:HAS_VALUE        ?value;
                          orkgp:HAS_METRIC        ?metric.
       ?cont         orkgp:HAS_BENCHMARK     ?benchmark;
                    orkgp:HAS_MODEL         ?model.
         ?model      rdfs:label              ?model_lbl.
        BIND(xsd:integer(?model_lbl) AS?model_lbl_value)
       ?cont         orkgp:HAS_SOURCE_CODE     ?sourcecode.
         ?sourcecode orkgp:HAS_MODEL         ?model.
         ?model      rdfs:label              ?model_lbl.
        BIND(xsd
