Question:
What are the metrics of evaluation over the ObjectNet dataset?

Generated SPARQL:
 SELECT?metric?score?evaluation
     WHERE {
    ?metric rdfs:label?metricLabel.
    ?metric rdfs:label "Metric"@en.
    ?score rdfs:label?scoreLabel.
    ?score rdfs:label "Score"@en.
    ?evaluation rdfs:label?evaluationLabel.
    ?evaluation rdfs:label "Evaluation"@en.
    ?dataset a ora:Dataset.
    ?dataset rdfs:label "ObjectNet"@en.
    ?dataset rdfs:label "ObjectNet"@en.
    ?dataset orkg:hasMetric?metric.
    ?dataset orkg:hasScore?score.
    ?dataset orkg:hasEvaluation?evaluation.
     }
    END SELECT. 
    END WHERE. 
    END {}.

    ```python
def generate_sparql_query(question, context):
    # Define the prefix declarations
    prefix_declarations = """
PREFIX ora: <http://www.ontologyportal.org/ontologies/ontologynamespaces/#>
PREFIX orkg: <http://www.ontologyportal.org/ontologies/orkgonamespaces/#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX spar: <http://www.w3.org/TR/rdf-sparql-protocol/#language>
PREFIX orkgp: <http://www.ontologyportal.org/ontologies/orkgonamespaces/predicates/>
"""

    # Define the SELECT clause
    select_clause = """
    SELECT?metric?score?evaluation
    """

    # Define the WHERE clause
    where_clause = """
    WHERE {
   ?metric rdfs:label?metricLabel.
   ?metric rdfs:label "Metric"@en.
   ?score rdfs:label?scoreLabel.
   ?score rdfs:label "Score"@en.
   ?evaluation rdfs:label?evaluationLabel.
   ?evaluation rdfs:label "Evaluation"@en.
   ?dataset a ora:Dataset.
   ?dataset rdfs:label "ObjectNet"@en.
   ?dataset rdfs:label "ObjectNet"@en.
   ?dataset orkg:hasMetric?metric.
   ?dataset orkg:hasScore?score.
   ?dataset orkg:hasEvaluation?evaluation.
    }
    """

    # Combine the prefix declarations, SELECT clause, and WHERE clause
    sparql_query = prefix_declarations + select_clause + "\n" + where_clause

    return sparql_query


def main():
    question = "What are the metrics of evaluation over the ObjectNet dataset?"
    context = {
        "question": question,
        "extracted_terms":
