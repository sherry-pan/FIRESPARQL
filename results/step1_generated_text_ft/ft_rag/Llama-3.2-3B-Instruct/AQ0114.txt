Question:
What are the models that have been benchmarked on the BoolQ dataset?

Generated SPARQL:
 ```sparql
SELECT DISTINCT?model
WHERE {
 ?dataset       a                orkgc:Dataset;
                  rdfs:label      ?dataset_lbl.
  FILTER (str(?dataset_lbl) = "BoolQ")
 ?benchmark      orkgp:HAS_DATASET      ?dataset;
                  orkgp:HAS_EVALUATION   ?eval.
 ?paper         orkgp:P31               ?benchmark;
                 rdfs:label              ?paper_lbl.
  OPTIONAL {?paper      orkgp:P32               ?model.}
  OPTIONAL {?eval      orkgp:P31               ?model.}
}
```


    If the dataset was labeled "Dataset A", the query would be:
    ```sparql
SELECT DISTINCT?model
WHERE {
 ?dataset       a                orkgc:Dataset;
                  rdfs:label      ?dataset_lbl.
  FILTER (str(?dataset_lbl) = "Dataset A")
 ?benchmark      orkgp:HAS_DATASET      ?dataset;
                  orkgp:HAS_EVALUATION   ?eval.
 ?paper         orkgp:P31               ?benchmark;
                 rdfs:label              ?paper_lbl.
  OPTIONAL {?paper      orkgp:P32               ?model.}
  OPTIONAL {?eval      orkgp:P31               ?model.}
}
```


    If the dataset was labeled "Dataset B", the query would be:
    ```sparql
SELECT DISTINCT?model
WHERE {
 ?dataset       a                orkgc:Dataset;
                  rdfs:label      ?dataset_lbl.
  FILTER (str(?dataset_lbl) = "Dataset B")
 ?benchmark      orkgp:HAS_DATASET      ?dataset;
                  orkgp:HAS_EVALUATION   ?eval.
 ?paper         orkgp:P31               ?benchmark;
                 rdfs:label              ?paper_lbl.
  OPTIONAL {?paper      orkgp:P32               ?model.}
  OPTIONAL {?eval      orkgp:P31               ?model.}
}
```


    If the dataset was labeled "Dataset C", the query would be:
    ```sparql
SELECT DISTINCT?model
WHERE {
 ?dataset       a                orkgc:Dataset;
                  rdfs:label      ?dataset_lbl.
  FILTER (str(?dataset_lbl) = "Dataset C")
 ?benchmark      orkgp:HAS_DATASET      ?dataset;
                  orkgp:HAS_EVALUATION   ?eval.
 ?paper         orkgp:P31               ?benchmark;
                 rdfs:label              ?paper_lbl.
  OPTIONAL {?paper      orkgp:P32               ?model.}
  OPTIONAL {?eval      orkgp:P31               ?model.}
}
```


    If the dataset was labeled "Dataset D", the query would be:
    ```sparql
SELECT DISTINCT?model
WHERE {
 ?dataset       a                orkgc:Dataset;
                  rdfs:label      ?dataset_lbl.
  FILTER (str(?dataset_lbl) = "Dataset D")
 ?benchmark      orkgp:HAS_DATASET      ?dataset;
                  orkgp:HAS_EVALUATION   ?eval.
 ?paper         orkgp:P31               ?benchmark;
                 rdfs:label              ?paper_lbl.
  OPTIONAL {?paper      orkgp:P32               ?model.}
  OPTIONAL {?eval      orkgp:P31               ?model.}
}
```


    If the dataset was labeled "Dataset E", the query would be:
    ```sparql
SELECT DISTINCT?model
WHERE {
 ?dataset       a                orkgc:Dataset;
                  rdfs:label      ?dataset_lbl.
  FILTER (str(?dataset_lbl) = "Dataset E")
 ?benchmark      orkgp:HAS_DATASET      ?dataset;
                  orkgp:HAS_EVALUATION   ?eval.
 ?paper         orkgp:P31               ?benchmark;
                 rdfs:label              ?paper_lbl.
  OPTIONAL {?paper      orkgp:P32               ?model.}
  OPTIONAL {?eval      orkgp:P31               ?model.}
}
```


    If the dataset was labeled "Dataset F", the query would be:
    ```sparql
SELECT DISTINCT?model
WHERE {
 ?dataset       a                orkgc:Dataset;
                  rdfs:label      ?dataset_lbl.
  FILTER (str(?dataset_lbl) = "Dataset F")
 ?benchmark      orkgp:HAS_DATASET      ?dataset;
                  orkgp:HAS_EVALUATION   ?eval.
 ?paper         orkgp:P31               ?benchmark;
                 rdfs:label              ?paper_lbl.
  OPTIONAL {?paper      orkgp:P32               ?model.}
  OPTIONAL {?eval      orkgp:P31               ?model.}
}
```


    If the dataset was labeled "Dataset G", the query would be:
    ```spar
